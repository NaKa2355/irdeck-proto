/**
 * @fileoverview gRPC-Web generated client stub for aim
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: aim/api/v1/aim_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as aim_api_v1_aim_service_pb from '../../../aim/api/v1/aim_service_pb';
import * as google_protobuf_any_pb from 'google-protobuf/google/protobuf/any_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class AimServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorAddAppliance = new grpcWeb.MethodDescriptor(
    '/aim.AimService/AddAppliance',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.AddApplianceRequest,
    aim_api_v1_aim_service_pb.AddAppResponse,
    (request: aim_api_v1_aim_service_pb.AddApplianceRequest) => {
      return request.serializeBinary();
    },
    aim_api_v1_aim_service_pb.AddAppResponse.deserializeBinary
  );

  addAppliance(
    request: aim_api_v1_aim_service_pb.AddApplianceRequest,
    metadata: grpcWeb.Metadata | null): Promise<aim_api_v1_aim_service_pb.AddAppResponse>;

  addAppliance(
    request: aim_api_v1_aim_service_pb.AddApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.AddAppResponse) => void): grpcWeb.ClientReadableStream<aim_api_v1_aim_service_pb.AddAppResponse>;

  addAppliance(
    request: aim_api_v1_aim_service_pb.AddApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.AddAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/AddAppliance',
        request,
        metadata || {},
        this.methodDescriptorAddAppliance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/AddAppliance',
    request,
    metadata || {},
    this.methodDescriptorAddAppliance);
  }

  methodDescriptorAddCommand = new grpcWeb.MethodDescriptor(
    '/aim.AimService/AddCommand',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.AddCommandRequest,
    google_protobuf_empty_pb.Empty,
    (request: aim_api_v1_aim_service_pb.AddCommandRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  addCommand(
    request: aim_api_v1_aim_service_pb.AddCommandRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  addCommand(
    request: aim_api_v1_aim_service_pb.AddCommandRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  addCommand(
    request: aim_api_v1_aim_service_pb.AddCommandRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/AddCommand',
        request,
        metadata || {},
        this.methodDescriptorAddCommand,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/AddCommand',
    request,
    metadata || {},
    this.methodDescriptorAddCommand);
  }

  methodDescriptorGetAppliances = new grpcWeb.MethodDescriptor(
    '/aim.AimService/GetAppliances',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    aim_api_v1_aim_service_pb.GetAppliancesResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    aim_api_v1_aim_service_pb.GetAppliancesResponse.deserializeBinary
  );

  getAppliances(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<aim_api_v1_aim_service_pb.GetAppliancesResponse>;

  getAppliances(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.GetAppliancesResponse) => void): grpcWeb.ClientReadableStream<aim_api_v1_aim_service_pb.GetAppliancesResponse>;

  getAppliances(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.GetAppliancesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/GetAppliances',
        request,
        metadata || {},
        this.methodDescriptorGetAppliances,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/GetAppliances',
    request,
    metadata || {},
    this.methodDescriptorGetAppliances);
  }

  methodDescriptorGetAppliance = new grpcWeb.MethodDescriptor(
    '/aim.AimService/GetAppliance',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.GetApplianceRequest,
    aim_api_v1_aim_service_pb.GetApplianceResponse,
    (request: aim_api_v1_aim_service_pb.GetApplianceRequest) => {
      return request.serializeBinary();
    },
    aim_api_v1_aim_service_pb.GetApplianceResponse.deserializeBinary
  );

  getAppliance(
    request: aim_api_v1_aim_service_pb.GetApplianceRequest,
    metadata: grpcWeb.Metadata | null): Promise<aim_api_v1_aim_service_pb.GetApplianceResponse>;

  getAppliance(
    request: aim_api_v1_aim_service_pb.GetApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.GetApplianceResponse) => void): grpcWeb.ClientReadableStream<aim_api_v1_aim_service_pb.GetApplianceResponse>;

  getAppliance(
    request: aim_api_v1_aim_service_pb.GetApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.GetApplianceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/GetAppliance',
        request,
        metadata || {},
        this.methodDescriptorGetAppliance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/GetAppliance',
    request,
    metadata || {},
    this.methodDescriptorGetAppliance);
  }

  methodDescriptorGetCommands = new grpcWeb.MethodDescriptor(
    '/aim.AimService/GetCommands',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.GetCommandsRequest,
    aim_api_v1_aim_service_pb.GetCommandsResponse,
    (request: aim_api_v1_aim_service_pb.GetCommandsRequest) => {
      return request.serializeBinary();
    },
    aim_api_v1_aim_service_pb.GetCommandsResponse.deserializeBinary
  );

  getCommands(
    request: aim_api_v1_aim_service_pb.GetCommandsRequest,
    metadata: grpcWeb.Metadata | null): Promise<aim_api_v1_aim_service_pb.GetCommandsResponse>;

  getCommands(
    request: aim_api_v1_aim_service_pb.GetCommandsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.GetCommandsResponse) => void): grpcWeb.ClientReadableStream<aim_api_v1_aim_service_pb.GetCommandsResponse>;

  getCommands(
    request: aim_api_v1_aim_service_pb.GetCommandsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: aim_api_v1_aim_service_pb.GetCommandsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/GetCommands',
        request,
        metadata || {},
        this.methodDescriptorGetCommands,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/GetCommands',
    request,
    metadata || {},
    this.methodDescriptorGetCommands);
  }

  methodDescriptorGetIrData = new grpcWeb.MethodDescriptor(
    '/aim.AimService/GetIrData',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.GetIrDataRequest,
    google_protobuf_any_pb.Any,
    (request: aim_api_v1_aim_service_pb.GetIrDataRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_any_pb.Any.deserializeBinary
  );

  getIrData(
    request: aim_api_v1_aim_service_pb.GetIrDataRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_any_pb.Any>;

  getIrData(
    request: aim_api_v1_aim_service_pb.GetIrDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_any_pb.Any) => void): grpcWeb.ClientReadableStream<google_protobuf_any_pb.Any>;

  getIrData(
    request: aim_api_v1_aim_service_pb.GetIrDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_any_pb.Any) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/GetIrData',
        request,
        metadata || {},
        this.methodDescriptorGetIrData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/GetIrData',
    request,
    metadata || {},
    this.methodDescriptorGetIrData);
  }

  methodDescriptorRenameAppliance = new grpcWeb.MethodDescriptor(
    '/aim.AimService/RenameAppliance',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.RenameApplianceRequest,
    google_protobuf_empty_pb.Empty,
    (request: aim_api_v1_aim_service_pb.RenameApplianceRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  renameAppliance(
    request: aim_api_v1_aim_service_pb.RenameApplianceRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  renameAppliance(
    request: aim_api_v1_aim_service_pb.RenameApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  renameAppliance(
    request: aim_api_v1_aim_service_pb.RenameApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/RenameAppliance',
        request,
        metadata || {},
        this.methodDescriptorRenameAppliance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/RenameAppliance',
    request,
    metadata || {},
    this.methodDescriptorRenameAppliance);
  }

  methodDescriptorChangeDevice = new grpcWeb.MethodDescriptor(
    '/aim.AimService/ChangeDevice',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.ChangeDeviceRequest,
    google_protobuf_empty_pb.Empty,
    (request: aim_api_v1_aim_service_pb.ChangeDeviceRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  changeDevice(
    request: aim_api_v1_aim_service_pb.ChangeDeviceRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  changeDevice(
    request: aim_api_v1_aim_service_pb.ChangeDeviceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  changeDevice(
    request: aim_api_v1_aim_service_pb.ChangeDeviceRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/ChangeDevice',
        request,
        metadata || {},
        this.methodDescriptorChangeDevice,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/ChangeDevice',
    request,
    metadata || {},
    this.methodDescriptorChangeDevice);
  }

  methodDescriptorRenameCommand = new grpcWeb.MethodDescriptor(
    '/aim.AimService/RenameCommand',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.RenameCommandRequest,
    google_protobuf_empty_pb.Empty,
    (request: aim_api_v1_aim_service_pb.RenameCommandRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  renameCommand(
    request: aim_api_v1_aim_service_pb.RenameCommandRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  renameCommand(
    request: aim_api_v1_aim_service_pb.RenameCommandRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  renameCommand(
    request: aim_api_v1_aim_service_pb.RenameCommandRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/RenameCommand',
        request,
        metadata || {},
        this.methodDescriptorRenameCommand,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/RenameCommand',
    request,
    metadata || {},
    this.methodDescriptorRenameCommand);
  }

  methodDescriptorSetIrData = new grpcWeb.MethodDescriptor(
    '/aim.AimService/SetIrData',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.SetIRDataRequest,
    google_protobuf_empty_pb.Empty,
    (request: aim_api_v1_aim_service_pb.SetIRDataRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  setIrData(
    request: aim_api_v1_aim_service_pb.SetIRDataRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  setIrData(
    request: aim_api_v1_aim_service_pb.SetIRDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  setIrData(
    request: aim_api_v1_aim_service_pb.SetIRDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/SetIrData',
        request,
        metadata || {},
        this.methodDescriptorSetIrData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/SetIrData',
    request,
    metadata || {},
    this.methodDescriptorSetIrData);
  }

  methodDescriptorDeleteAppliance = new grpcWeb.MethodDescriptor(
    '/aim.AimService/DeleteAppliance',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.DeleteApplianceRequest,
    google_protobuf_empty_pb.Empty,
    (request: aim_api_v1_aim_service_pb.DeleteApplianceRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteAppliance(
    request: aim_api_v1_aim_service_pb.DeleteApplianceRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteAppliance(
    request: aim_api_v1_aim_service_pb.DeleteApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteAppliance(
    request: aim_api_v1_aim_service_pb.DeleteApplianceRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/DeleteAppliance',
        request,
        metadata || {},
        this.methodDescriptorDeleteAppliance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/DeleteAppliance',
    request,
    metadata || {},
    this.methodDescriptorDeleteAppliance);
  }

  methodDescriptorDeleteCommand = new grpcWeb.MethodDescriptor(
    '/aim.AimService/DeleteCommand',
    grpcWeb.MethodType.UNARY,
    aim_api_v1_aim_service_pb.DeleteCommandRequest,
    google_protobuf_empty_pb.Empty,
    (request: aim_api_v1_aim_service_pb.DeleteCommandRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteCommand(
    request: aim_api_v1_aim_service_pb.DeleteCommandRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteCommand(
    request: aim_api_v1_aim_service_pb.DeleteCommandRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteCommand(
    request: aim_api_v1_aim_service_pb.DeleteCommandRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/aim.AimService/DeleteCommand',
        request,
        metadata || {},
        this.methodDescriptorDeleteCommand,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/aim.AimService/DeleteCommand',
    request,
    metadata || {},
    this.methodDescriptorDeleteCommand);
  }

  methodDescriptorNotifyApplianceUpdate = new grpcWeb.MethodDescriptor(
    '/aim.AimService/NotifyApplianceUpdate',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    aim_api_v1_aim_service_pb.ApplianceUpdateNotification,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    aim_api_v1_aim_service_pb.ApplianceUpdateNotification.deserializeBinary
  );

  notifyApplianceUpdate(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<aim_api_v1_aim_service_pb.ApplianceUpdateNotification> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/aim.AimService/NotifyApplianceUpdate',
      request,
      metadata || {},
      this.methodDescriptorNotifyApplianceUpdate);
  }

}

