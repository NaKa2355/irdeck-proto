/**
 * @fileoverview gRPC-Web generated client stub for aim
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: aim/api/v1/aim_service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var aim_api_v1_command_pb = require('../../../aim/api/v1/command_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')

var aim_api_v1_appliance_pb = require('../../../aim/api/v1/appliance_pb.js')

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js')
const proto = {};
proto.aim = require('./aim_service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aim.AimServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aim.AimServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.AddApplianceRequest,
 *   !proto.aim.AddApplianceResponse>}
 */
const methodDescriptor_AimService_AddAppliance = new grpc.web.MethodDescriptor(
  '/aim.AimService/AddAppliance',
  grpc.web.MethodType.UNARY,
  proto.aim.AddApplianceRequest,
  proto.aim.AddApplianceResponse,
  /**
   * @param {!proto.aim.AddApplianceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aim.AddApplianceResponse.deserializeBinary
);


/**
 * @param {!proto.aim.AddApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aim.AddApplianceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aim.AddApplianceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.addAppliance =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/AddAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_AddAppliance,
      callback);
};


/**
 * @param {!proto.aim.AddApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aim.AddApplianceResponse>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.addAppliance =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/AddAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_AddAppliance);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.AddCommandRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_AddCommand = new grpc.web.MethodDescriptor(
  '/aim.AimService/AddCommand',
  grpc.web.MethodType.UNARY,
  proto.aim.AddCommandRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.AddCommandRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.AddCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.addCommand =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/AddCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_AddCommand,
      callback);
};


/**
 * @param {!proto.aim.AddCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.addCommand =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/AddCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_AddCommand);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.aim.GetAppliancesResponse>}
 */
const methodDescriptor_AimService_GetAppliances = new grpc.web.MethodDescriptor(
  '/aim.AimService/GetAppliances',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.aim.GetAppliancesResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aim.GetAppliancesResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aim.GetAppliancesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aim.GetAppliancesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.getAppliances =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/GetAppliances',
      request,
      metadata || {},
      methodDescriptor_AimService_GetAppliances,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aim.GetAppliancesResponse>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.getAppliances =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/GetAppliances',
      request,
      metadata || {},
      methodDescriptor_AimService_GetAppliances);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.GetApplianceRequest,
 *   !proto.aim.GetApplianceResponse>}
 */
const methodDescriptor_AimService_GetAppliance = new grpc.web.MethodDescriptor(
  '/aim.AimService/GetAppliance',
  grpc.web.MethodType.UNARY,
  proto.aim.GetApplianceRequest,
  proto.aim.GetApplianceResponse,
  /**
   * @param {!proto.aim.GetApplianceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aim.GetApplianceResponse.deserializeBinary
);


/**
 * @param {!proto.aim.GetApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aim.GetApplianceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aim.GetApplianceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.getAppliance =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/GetAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_GetAppliance,
      callback);
};


/**
 * @param {!proto.aim.GetApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aim.GetApplianceResponse>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.getAppliance =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/GetAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_GetAppliance);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.GetCommandsRequest,
 *   !proto.aim.GetCommandsResponse>}
 */
const methodDescriptor_AimService_GetCommands = new grpc.web.MethodDescriptor(
  '/aim.AimService/GetCommands',
  grpc.web.MethodType.UNARY,
  proto.aim.GetCommandsRequest,
  proto.aim.GetCommandsResponse,
  /**
   * @param {!proto.aim.GetCommandsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aim.GetCommandsResponse.deserializeBinary
);


/**
 * @param {!proto.aim.GetCommandsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aim.GetCommandsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aim.GetCommandsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.getCommands =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/GetCommands',
      request,
      metadata || {},
      methodDescriptor_AimService_GetCommands,
      callback);
};


/**
 * @param {!proto.aim.GetCommandsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aim.GetCommandsResponse>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.getCommands =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/GetCommands',
      request,
      metadata || {},
      methodDescriptor_AimService_GetCommands);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.GetIrDataRequest,
 *   !proto.google.protobuf.Any>}
 */
const methodDescriptor_AimService_GetIrData = new grpc.web.MethodDescriptor(
  '/aim.AimService/GetIrData',
  grpc.web.MethodType.UNARY,
  proto.aim.GetIrDataRequest,
  google_protobuf_any_pb.Any,
  /**
   * @param {!proto.aim.GetIrDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_any_pb.Any.deserializeBinary
);


/**
 * @param {!proto.aim.GetIrDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Any)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Any>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.getIrData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/GetIrData',
      request,
      metadata || {},
      methodDescriptor_AimService_GetIrData,
      callback);
};


/**
 * @param {!proto.aim.GetIrDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Any>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.getIrData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/GetIrData',
      request,
      metadata || {},
      methodDescriptor_AimService_GetIrData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.RenameApplianceRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_RenameAppliance = new grpc.web.MethodDescriptor(
  '/aim.AimService/RenameAppliance',
  grpc.web.MethodType.UNARY,
  proto.aim.RenameApplianceRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.RenameApplianceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.RenameApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.renameAppliance =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/RenameAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_RenameAppliance,
      callback);
};


/**
 * @param {!proto.aim.RenameApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.renameAppliance =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/RenameAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_RenameAppliance);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.ChangeDeviceRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_ChangeDevice = new grpc.web.MethodDescriptor(
  '/aim.AimService/ChangeDevice',
  grpc.web.MethodType.UNARY,
  proto.aim.ChangeDeviceRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.ChangeDeviceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.ChangeDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.changeDevice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/ChangeDevice',
      request,
      metadata || {},
      methodDescriptor_AimService_ChangeDevice,
      callback);
};


/**
 * @param {!proto.aim.ChangeDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.changeDevice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/ChangeDevice',
      request,
      metadata || {},
      methodDescriptor_AimService_ChangeDevice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.EditApplianceRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_EditAppliance = new grpc.web.MethodDescriptor(
  '/aim.AimService/EditAppliance',
  grpc.web.MethodType.UNARY,
  proto.aim.EditApplianceRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.EditApplianceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.EditApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.editAppliance =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/EditAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_EditAppliance,
      callback);
};


/**
 * @param {!proto.aim.EditApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.editAppliance =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/EditAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_EditAppliance);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.EditCommandRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_EditCommand = new grpc.web.MethodDescriptor(
  '/aim.AimService/EditCommand',
  grpc.web.MethodType.UNARY,
  proto.aim.EditCommandRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.EditCommandRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.EditCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.editCommand =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/EditCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_EditCommand,
      callback);
};


/**
 * @param {!proto.aim.EditCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.editCommand =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/EditCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_EditCommand);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.RenameCommandRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_RenameCommand = new grpc.web.MethodDescriptor(
  '/aim.AimService/RenameCommand',
  grpc.web.MethodType.UNARY,
  proto.aim.RenameCommandRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.RenameCommandRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.RenameCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.renameCommand =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/RenameCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_RenameCommand,
      callback);
};


/**
 * @param {!proto.aim.RenameCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.renameCommand =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/RenameCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_RenameCommand);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.SetIRDataRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_SetIrData = new grpc.web.MethodDescriptor(
  '/aim.AimService/SetIrData',
  grpc.web.MethodType.UNARY,
  proto.aim.SetIRDataRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.SetIRDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.SetIRDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.setIrData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/SetIrData',
      request,
      metadata || {},
      methodDescriptor_AimService_SetIrData,
      callback);
};


/**
 * @param {!proto.aim.SetIRDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.setIrData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/SetIrData',
      request,
      metadata || {},
      methodDescriptor_AimService_SetIrData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.DeleteApplianceRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_DeleteAppliance = new grpc.web.MethodDescriptor(
  '/aim.AimService/DeleteAppliance',
  grpc.web.MethodType.UNARY,
  proto.aim.DeleteApplianceRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.DeleteApplianceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.DeleteApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.deleteAppliance =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/DeleteAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_DeleteAppliance,
      callback);
};


/**
 * @param {!proto.aim.DeleteApplianceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.deleteAppliance =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/DeleteAppliance',
      request,
      metadata || {},
      methodDescriptor_AimService_DeleteAppliance);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aim.DeleteCommandRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AimService_DeleteCommand = new grpc.web.MethodDescriptor(
  '/aim.AimService/DeleteCommand',
  grpc.web.MethodType.UNARY,
  proto.aim.DeleteCommandRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.aim.DeleteCommandRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.aim.DeleteCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.deleteCommand =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aim.AimService/DeleteCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_DeleteCommand,
      callback);
};


/**
 * @param {!proto.aim.DeleteCommandRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.aim.AimServicePromiseClient.prototype.deleteCommand =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aim.AimService/DeleteCommand',
      request,
      metadata || {},
      methodDescriptor_AimService_DeleteCommand);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.aim.ApplianceUpdateNotification>}
 */
const methodDescriptor_AimService_NotifyApplianceUpdate = new grpc.web.MethodDescriptor(
  '/aim.AimService/NotifyApplianceUpdate',
  grpc.web.MethodType.SERVER_STREAMING,
  google_protobuf_empty_pb.Empty,
  proto.aim.ApplianceUpdateNotification,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aim.ApplianceUpdateNotification.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.aim.ApplianceUpdateNotification>}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServiceClient.prototype.notifyApplianceUpdate =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/aim.AimService/NotifyApplianceUpdate',
      request,
      metadata || {},
      methodDescriptor_AimService_NotifyApplianceUpdate);
};


/**
 * @param {!proto.google.protobuf.Empty} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.aim.ApplianceUpdateNotification>}
 *     The XHR Node Readable Stream
 */
proto.aim.AimServicePromiseClient.prototype.notifyApplianceUpdate =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/aim.AimService/NotifyApplianceUpdate',
      request,
      metadata || {},
      methodDescriptor_AimService_NotifyApplianceUpdate);
};


module.exports = proto.aim;

