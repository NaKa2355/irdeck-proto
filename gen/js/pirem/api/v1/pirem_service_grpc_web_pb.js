/**
 * @fileoverview gRPC-Web generated client stub for pirem
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: pirem/api/v1/pirem_service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var pirem_api_v1_device_info_pb = require('../../../pirem/api/v1/device_info_pb.js')

var pirem_api_v1_irdata_pb = require('../../../pirem/api/v1/irdata_pb.js')
const proto = {};
proto.pirem = require('./pirem_service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pirem.PiRemServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pirem.PiRemServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pirem.SendIrRequest,
 *   !proto.pirem.SendIrResponse>}
 */
const methodDescriptor_PiRemService_SendIr = new grpc.web.MethodDescriptor(
  '/pirem.PiRemService/SendIr',
  grpc.web.MethodType.UNARY,
  proto.pirem.SendIrRequest,
  proto.pirem.SendIrResponse,
  /**
   * @param {!proto.pirem.SendIrRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pirem.SendIrResponse.deserializeBinary
);


/**
 * @param {!proto.pirem.SendIrRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pirem.SendIrResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pirem.SendIrResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pirem.PiRemServiceClient.prototype.sendIr =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pirem.PiRemService/SendIr',
      request,
      metadata || {},
      methodDescriptor_PiRemService_SendIr,
      callback);
};


/**
 * @param {!proto.pirem.SendIrRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pirem.SendIrResponse>}
 *     Promise that resolves to the response
 */
proto.pirem.PiRemServicePromiseClient.prototype.sendIr =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pirem.PiRemService/SendIr',
      request,
      metadata || {},
      methodDescriptor_PiRemService_SendIr);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pirem.ReceiveIrRequest,
 *   !proto.pirem.ReceiveIrResponse>}
 */
const methodDescriptor_PiRemService_ReceiveIr = new grpc.web.MethodDescriptor(
  '/pirem.PiRemService/ReceiveIr',
  grpc.web.MethodType.UNARY,
  proto.pirem.ReceiveIrRequest,
  proto.pirem.ReceiveIrResponse,
  /**
   * @param {!proto.pirem.ReceiveIrRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pirem.ReceiveIrResponse.deserializeBinary
);


/**
 * @param {!proto.pirem.ReceiveIrRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pirem.ReceiveIrResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pirem.ReceiveIrResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pirem.PiRemServiceClient.prototype.receiveIr =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pirem.PiRemService/ReceiveIr',
      request,
      metadata || {},
      methodDescriptor_PiRemService_ReceiveIr,
      callback);
};


/**
 * @param {!proto.pirem.ReceiveIrRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pirem.ReceiveIrResponse>}
 *     Promise that resolves to the response
 */
proto.pirem.PiRemServicePromiseClient.prototype.receiveIr =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pirem.PiRemService/ReceiveIr',
      request,
      metadata || {},
      methodDescriptor_PiRemService_ReceiveIr);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pirem.GetAllDeviceInfoRequest,
 *   !proto.pirem.GetAllDeviceInfoResponse>}
 */
const methodDescriptor_PiRemService_GetAllDeviceInfo = new grpc.web.MethodDescriptor(
  '/pirem.PiRemService/GetAllDeviceInfo',
  grpc.web.MethodType.UNARY,
  proto.pirem.GetAllDeviceInfoRequest,
  proto.pirem.GetAllDeviceInfoResponse,
  /**
   * @param {!proto.pirem.GetAllDeviceInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pirem.GetAllDeviceInfoResponse.deserializeBinary
);


/**
 * @param {!proto.pirem.GetAllDeviceInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pirem.GetAllDeviceInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pirem.GetAllDeviceInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pirem.PiRemServiceClient.prototype.getAllDeviceInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pirem.PiRemService/GetAllDeviceInfo',
      request,
      metadata || {},
      methodDescriptor_PiRemService_GetAllDeviceInfo,
      callback);
};


/**
 * @param {!proto.pirem.GetAllDeviceInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pirem.GetAllDeviceInfoResponse>}
 *     Promise that resolves to the response
 */
proto.pirem.PiRemServicePromiseClient.prototype.getAllDeviceInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pirem.PiRemService/GetAllDeviceInfo',
      request,
      metadata || {},
      methodDescriptor_PiRemService_GetAllDeviceInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pirem.GetDeviceInfoRequest,
 *   !proto.pirem.DeviceInfo>}
 */
const methodDescriptor_PiRemService_GetDeviceInfo = new grpc.web.MethodDescriptor(
  '/pirem.PiRemService/GetDeviceInfo',
  grpc.web.MethodType.UNARY,
  proto.pirem.GetDeviceInfoRequest,
  pirem_api_v1_device_info_pb.DeviceInfo,
  /**
   * @param {!proto.pirem.GetDeviceInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  pirem_api_v1_device_info_pb.DeviceInfo.deserializeBinary
);


/**
 * @param {!proto.pirem.GetDeviceInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pirem.DeviceInfo)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pirem.DeviceInfo>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pirem.PiRemServiceClient.prototype.getDeviceInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pirem.PiRemService/GetDeviceInfo',
      request,
      metadata || {},
      methodDescriptor_PiRemService_GetDeviceInfo,
      callback);
};


/**
 * @param {!proto.pirem.GetDeviceInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pirem.DeviceInfo>}
 *     Promise that resolves to the response
 */
proto.pirem.PiRemServicePromiseClient.prototype.getDeviceInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pirem.PiRemService/GetDeviceInfo',
      request,
      metadata || {},
      methodDescriptor_PiRemService_GetDeviceInfo);
};


module.exports = proto.pirem;

